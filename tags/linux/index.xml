<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Notes...</title>
    <link>https://danward79.github.io/tags/linux/index.xml</link>
    <description>Recent content in Linux on Notes...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://danward79.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Watchdog on the PI</title>
      <link>https://danward79.github.io/post/pi_watchdog/</link>
      <pubDate>Mon, 13 Jul 2015 20:36:59 +1000</pubDate>
      
      <guid>https://danward79.github.io/post/pi_watchdog/</guid>
      <description>

&lt;p&gt;Sometimes, it&amp;rsquo;s handy to have someone on standby to reset a computer, when it freezes in explicably. There is a tool for this purpose. It&amp;rsquo;s called a &lt;a href=&#34;https://en.wikipedia.org/wiki/Watchdog_timer&#34;&gt;watchdog&lt;/a&gt;. On most of the PI&amp;rsquo;s I have had running I have setup a watchdog for this purpose.&lt;/p&gt;

&lt;p&gt;In short a watchdog, will cause either a hard or soft reset to occur, if it is not kicked by the system often enough. The kick is assumed to indicate an operating system.&lt;/p&gt;

&lt;h4 id=&#34;to-install-on-the-raspberry-pi&#34;&gt;To install on the Raspberry PI.&lt;/h4&gt;

&lt;p&gt;From the command line on a standard Rasbian install.&lt;/p&gt;

&lt;p&gt;First update Raspbian, note the &amp;lsquo;-y&amp;rsquo; flag which suppresses any prompts.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get -y update
sudo apt-get -y upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Expose the watchdog to the operating system. This will create a device at /dev/watchdog&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo modprobe bcm2708_wdog
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Edit module to load at boot. Add the following line.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;bcm2708_wdog&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo nano /etc/modules
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install the watchdog service, check it is on and start.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install watchdog chkconfig
sudo chkconfig watchdog on
sudo /etc/init.d/watchdog start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open the watchdog config file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo nano /etc/watchdog.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the config uncomment lines with&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;watchdog-device&amp;rdquo; and&lt;/li&gt;
&lt;li&gt;&amp;ldquo;max-load-1 = 24&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;set the following lines to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;realtime = yes&lt;/li&gt;
&lt;li&gt;priority = 1&lt;/li&gt;
&lt;li&gt;interval = 14&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Restart the service.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo /etc/init.d/watchdog restart
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;test-it&#34;&gt;Test it&lt;/h4&gt;

&lt;p&gt;To test, lets force the PI to crash. This is known as a Fork-Bomb! Disable swap and then.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo swapoff -a
:(){ :|:&amp;amp; };:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can stop it with: sudo /etc/init.d/watchdog stop OR sudo systemctl stop watchdog.service&lt;/p&gt;

&lt;p&gt;You can disable it permanently with: sudo update-rc.d -f watchdog remove OR sudo systemctl disable watchdog.service﻿&lt;/p&gt;

&lt;h6 id=&#34;references&#34;&gt;References&lt;/h6&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://rpihouse.wordpress.com/2012/12/06/watching-the-dog/&#34;&gt;Watching the dog.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Mosquitto on the PI</title>
      <link>https://danward79.github.io/post/mosquitto/</link>
      <pubDate>Sun, 12 Jul 2015 20:36:59 +1000</pubDate>
      
      <guid>https://danward79.github.io/post/mosquitto/</guid>
      <description>

&lt;p&gt;MQTT is a publish/subscribe messaging system, &lt;a href=&#34;http://mosquitto.org/&#34;&gt;Mosquitto&lt;/a&gt; is on open source broker.&lt;/p&gt;

&lt;h3 id=&#34;install-main-package&#34;&gt;Install main package&lt;/h3&gt;

&lt;p&gt;From the command line&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install mosquitto
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-command-line-tools&#34;&gt;Install command Line tools&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install mosquitto-clients
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-c-dev-libraries&#34;&gt;Install C Dev Libraries&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install libmosquitto0-dev libmosquittopp0-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;test-subscription&#34;&gt;Test subscription&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mosquitto_sub -v -t ‘#’

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or alternatively&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mosquitto_sub -v -t ‘#’ | xxd
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>